on:
    push:
        tags: '*'

jobs:
    release:
        name: Build & release
        runs-on: 'ubuntu-latest'
        strategy:
            matrix:
                goosarch:
                    - 'linux/amd64'
                    - 'linux/arm64'
                    - 'windows/amd64'
                    - 'windows/arm64'
                    - 'darwin/amd64'
                    - 'darwin/arm64'
        steps:
            - name: Checkout code
              uses: actions/checkout@v3
            
            - uses: actions/setup-go@v4
              with:
                go-version: '>=1.18'

            - name: Install apt dependencies
              run: sudo apt install libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config

            - name: Get OS and arch info
              run: |
                GOOSARCH=${{matrix.goosarch}}
                GOOS=${GOOSARCH%/*}
                GOARCH=${GOOSARCH#*/}
                BINARY_NAME=${{ github.repository }}-$GOOS-$GOARCH
                echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
                echo "GOOS=$GOOS" >> $GITHUB_ENV
                echo "GOARCH=$GOARCH" >> $GITHUB_ENV
            
            - name: Build
              run: |
                bash ./build.sh
            
            - name: Release notes
              run:
                git log $(git describe HEAD~ --tags --abbrev=0)..HEAD --pretty='format:* %h %s%n  * %an <%ae>' --no-merges >> ".github/RELEASE-TEMPLATE.md"

            - name: Release!
              uses: softprops/action-gh-release@v1
              with:
                body_path: ".github/RELEASE-TEMPLATE.md"
                files: ${{env.BINARY_NAME}}
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}